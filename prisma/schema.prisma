// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  email    String  @unique
  hash     String
  name     String?
  messages ChatMessage[]
  applications Application[]
}

model Application {
  id String @id @default(uuid())
  userId String
  studiesFieldId String
  status ApplicationStatus
  calculatedScore Float

  user User @relation(fields: [userId], references: [id])
  studiesField StudiesField @relation(fields: [studiesFieldId], references: [id])
}

enum ApplicationStatus {
  PENDING
  TO_BE_PAID
  PAID
  REJECTED
  ACCEPTED
  ACCEPTED_RESERVE
  MORE_INFO_NEEDED
}

model University {
  id              String @id @default(uuid())
  institutionName String
  creationDate    String?
  institutionType String?
  universityType  String?
  regon           String?
  nip             String?
  krs             String?
  website         String?
  streetAddress   String?
  streetNumber    String?
  postalCode      String?
  city            String?
  StudiesField    StudiesField[]
}


model StudiesField {
  id   String @id @default(uuid())
  name String
  universityId String
  university University @relation(fields: [universityId], references: [id])
  studiesFieldScoresHistory StudiesFieldScoresHistory[]
  applications Application[]
}

model StudiesFieldScoresHistory {
  id   String @id @default(uuid())
  score Float
  maxScore Float
  year  Int
  studiesFieldId String
  peopleApplied Int
  peopleMax Int
  StudiesField StudiesField @relation(fields: [studiesFieldId], references: [id])
}

model ChatMessage {
  id            String      @id @default(uuid())
  message       String
  createdById   String
  createdBy     User        @relation(fields: [createdById], references: [id])
  createdAt     DateTime    @default(now())
}
